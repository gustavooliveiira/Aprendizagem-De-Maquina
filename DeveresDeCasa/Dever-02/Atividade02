# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qIKAzr_Fo81lzI86wKTcSU9TRBqS2vC5
"""

def solicitar_frase():
    while True:
        frase = input("Digite uma frase: ").strip()
        if frase:
            return frase
        print("Erro: A entrada não pode estar vazia. Tente novamente.")

def analisar_frase(frase):
    num_caracteres = len(frase)  # Contagem de caracteres (inclui espaços)
    palavras = frase.split()  # Divide a frase em palavras
    num_palavras = len(palavras)  # Contagem de palavras
    maior_palavra = max(palavras, key=len) if palavras else ""  # Encontra a maior palavra

    return num_caracteres, num_palavras, maior_palavra, palavras

def manipular_frase(frase, palavras):
    frase_invertida_caracteres = frase[::-1]  # Inverter por caracteres
    frase_invertida_palavras = " ".join(reversed(palavras))  # Inverter por palavras
    frase_maiuscula = frase.upper()  # Converter para maiúsculas
    frase_minuscula = frase.lower()  # Converter para minúsculas
    tupla_palavras = tuple(palavras)  # Criar uma tupla com as palavras

    return (frase_invertida_caracteres, frase_invertida_palavras,
            frase_maiuscula, frase_minuscula, tupla_palavras)

def exibir_resultados(num_caracteres, num_palavras, maior_palavra,
                      frase_inv_chars, frase_inv_words, frase_upper,
                      frase_lower, tupla_palavras):
    print("\n===== Análise da Frase =====")
    print(f"Total de caracteres: {num_caracteres}")
    print(f"Total de palavras: {num_palavras}")
    print(f"Maior palavra: {maior_palavra}")
    print(f"Frase invertida por caracteres: {frase_inv_chars}")
    print(f"Frase invertida por palavras: {frase_inv_words}")
    print(f"Frase em maiúsculas: {frase_upper}")
    print(f"Frase em minúsculas: {frase_lower}")
    print(f"Tupla de palavras: {tupla_palavras}")

# Fluxo principal do programa
frase_usuario = solicitar_frase()
num_caracteres, num_palavras, maior_palavra, palavras = analisar_frase(frase_usuario)
(frase_inv_chars, frase_inv_words, frase_upper, frase_lower, tupla_palavras) = manipular_frase(frase_usuario, palavras)

# Exibir os resultados formatados
exibir_resultados(num_caracteres, num_palavras, maior_palavra,
                  frase_inv_chars, frase_inv_words, frase_upper,
                  frase_lower, tupla_palavras)

"""# Nova seção"""